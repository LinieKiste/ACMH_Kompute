#version 450

layout (local_size_x = 1) in;
// [y][x][group] (vec4: channels)
layout (set = 0, binding = 0) buffer buf_in_image { readonly restrict vec4 in_image[]; };
// [y][x][group] (vec4: channels)
layout (set = 0, binding = 1) buffer buf_out_image { writeonly restrict vec4 out_image[]; };

layout (constant_id = 0) const float width = 0;
layout (constant_id = 1) const float height = 0;
layout (constant_id = 2) const float channels = 0;

uint index(uvec2 pos) {
    return (pos.x + (pos.y * uint(width)));
}

void main()
{	
    uint in_ptr = index(gl_GlobalInvocationID.xy);

    vec4 value = in_image[in_ptr];
    out_image[in_ptr] = vec4(value.x, 0, 0, 0);
}